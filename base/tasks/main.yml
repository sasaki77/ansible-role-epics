---
- name: main / Add the OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: main / Install the required packages
  package:
    name: "{{ required_packages }}"
    state: present

- name: main / Make epics directory structure
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ epics_base_owner }}"
    group: "{{ epics_base_group }}"
    recurse: yes
  loop:
    - "{{ epics_base_epics_directory}}"
    - "{{ epics_base_epics_directory }}/app"
    - "{{ epics_base_epics_directory }}/modules/soft"
    - "{{ epics_base_epics_directory }}/modules/instruments"

- name: main / Chack base exists
  stat: path={{ epics_base_base_name }}/README
  register: base_exists

- block:
  - name: main / Download epics base srcs
    unarchive:
      src: "{{ epics_base_base_url }}"
      dest: "{{ epics_base_epics_directory }}"
      owner: "{{ epics_base_owner }}"
      group: "{{ epics_base_group }}"
      remote_src: True

  - name: main / Download epics extnsionTop srcs
    unarchive:
      src: "{{ epics_base_extensions_top_url }}"
      dest: "{{ epics_base_epics_directory }}"
      owner: "{{ epics_base_owner }}"
      group: "{{ epics_base_group }}"
      remote_src: True

  - name: Move base
    command: mv "{{ epics_base_epics_directory }}/{{ epics_base_base_unarchived_name }}" "{{ epics_base_base_name }}"
  when: not base_exists.stat.exists

- name: Make epics base
  make:
    chdir: "{{ epics_base_base_name }}"
  environment:
    EPICS_HOST_ARCH: "{{ epics_base_epics_host_arch }}"
  become: true
  become_user: "{{ epics_base_owner }}"
